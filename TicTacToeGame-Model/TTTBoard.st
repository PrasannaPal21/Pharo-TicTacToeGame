'From Pharo12.0.0SNAPSHOT of 28 March 2025 [Build information: Pharo-12.0.0+SNAPSHOT.build.1568.sha.a05651321a7202ae7692eef252cf2759be4102ae (64 Bit)] on 2 April 2025 at 6:56:25.656 pm'!CMAbstractModel subclass: #TTTBoard	instanceVariableNames: 'cells currentPlayer gameOver'	classVariableNames: ''	package: 'TicTacToeGame-Model'!!TTTBoard methodsFor: 'initialization' stamp: '4/2/2025 18:44'!initialize    "Initializes the board by creating 9 TTTCell instances, setting the initial player, and game state."    cells := Array new: 9.    1 to: 9 do: [:i |        cells at: i put: (TTTCell new initialize).    ].    currentPlayer := #X.    gameOver := false. "Set initial state"    ^self.! !!TTTBoard methodsFor: 'accessing - entities' stamp: '4/2/2025 15:56'!cells	"Getter method returning the cells collection."	^cells! !!TTTBoard methodsFor: 'as yet unclassified' stamp: '4/2/2025 18:44'!markCell: aCell    "Checks if the cell is empty and game is not over. If so, marks it, checks win conditions, and switches players."        (gameOver or: [ aCell state ~= #empty ]) ifTrue: [ ^self ]. "Do nothing if game is over or cell is not empty"    aCell state: currentPlayer.    self checkWinConditions.        gameOver ifFalse: [ self switchPlayer ]. "Only switch player if game is not over"! !!TTTBoard methodsFor: 'as yet unclassified' stamp: '4/2/2025 15:57'!switchPlayer	"Toggles currentPlayer between #X and #O."	currentPlayer = #X		ifTrue: [ currentPlayer := #O ]		ifFalse: [ currentPlayer := #X ].	^self! !!TTTBoard methodsFor: 'as yet unclassified' stamp: '4/2/2025 18:45'!checkWinConditions    "Scans rows, columns, and diagonals to detect a win or draw."    | winCombos winner |    winCombos := {        {1. 2. 3}. {4. 5. 6}. {7. 8. 9}.  "Rows"        {1. 4. 7}. {2. 5. 8}. {3. 6. 9}.  "Columns"        {1. 5. 9}. {3. 5. 7}               "Diagonals"    }.    winCombos do: [:combo |        | markers |        markers := combo collect: [:i | (cells at: i) state].        ((markers first ~= #empty) and: [ markers allSatisfy: [:m | m = markers first] ]) ifTrue: [              winner := markers first.            self announceWin: winner.            gameOver := true. "Stop the game"            ^self. "Exit immediately after detecting a winner"        ].    ].    "Check for a draw (all cells filled and no winner)"    (cells allSatisfy: [:cell | cell state ~= #empty]) ifTrue: [        Transcript show: 'The game is a draw.'; cr.        gameOver := true.    ].! !!TTTBoard methodsFor: 'as yet unclassified' stamp: '4/2/2025 18:46'!announceWin: aMarker    "Announces the winning marker and stops further moves."    Transcript show: 'Game Over!! Player ', aMarker printString, ' wins!!!!'; cr.! !